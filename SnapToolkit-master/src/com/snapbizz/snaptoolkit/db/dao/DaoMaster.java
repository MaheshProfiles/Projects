package com.snapbizz.snaptoolkit.db.dao;

import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteDatabase.CursorFactory;
import android.database.sqlite.SQLiteOpenHelper;
import android.util.Log;
import de.greenrobot.dao.AbstractDaoMaster;
import de.greenrobot.dao.identityscope.IdentityScopeType;

import com.snapbizz.snaptoolkit.db.dao.PurchaseOrdersDao;
import com.snapbizz.snaptoolkit.db.dao.PurchaseOrderDetailsDao;
import com.snapbizz.snaptoolkit.db.dao.InvoicesDao;
import com.snapbizz.snaptoolkit.db.dao.ItemsDao;
import com.snapbizz.snaptoolkit.db.dao.TransactionsDao;
import com.snapbizz.snaptoolkit.db.dao.ProductsDao;
import com.snapbizz.snaptoolkit.db.dao.InventoryDao;
import com.snapbizz.snaptoolkit.db.dao.ProductPacksDao;
import com.snapbizz.snaptoolkit.db.dao.CustomersDao;
import com.snapbizz.snaptoolkit.db.dao.CustomerDetailsDao;
import com.snapbizz.snaptoolkit.db.dao.CustomerMonthlySummaryDao;
import com.snapbizz.snaptoolkit.db.dao.DistributorsDao;
import com.snapbizz.snaptoolkit.db.dao.DistributorDetailsDao;
import com.snapbizz.snaptoolkit.db.dao.DistributorPaymentsDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * Master of DAO (schema version 1): knows all DAOs.
*/
public class DaoMaster extends AbstractDaoMaster {
    public static final int SCHEMA_VERSION = 1;

    /** Creates underlying database table using DAOs. */
    public static void createAllTables(SQLiteDatabase db, boolean ifNotExists) {
        PurchaseOrdersDao.createTable(db, ifNotExists);
        PurchaseOrderDetailsDao.createTable(db, ifNotExists);
        InvoicesDao.createTable(db, ifNotExists);
        ItemsDao.createTable(db, ifNotExists);
        TransactionsDao.createTable(db, ifNotExists);
        ProductsDao.createTable(db, ifNotExists);
        InventoryDao.createTable(db, ifNotExists);
        ProductPacksDao.createTable(db, ifNotExists);
        CustomersDao.createTable(db, ifNotExists);
        CustomerDetailsDao.createTable(db, ifNotExists);
        CustomerMonthlySummaryDao.createTable(db, ifNotExists);
        DistributorsDao.createTable(db, ifNotExists);
        DistributorDetailsDao.createTable(db, ifNotExists);
        DistributorPaymentsDao.createTable(db, ifNotExists);
    }
    
    /** Drops underlying database table using DAOs. */
    public static void dropAllTables(SQLiteDatabase db, boolean ifExists) {
        PurchaseOrdersDao.dropTable(db, ifExists);
        PurchaseOrderDetailsDao.dropTable(db, ifExists);
        InvoicesDao.dropTable(db, ifExists);
        ItemsDao.dropTable(db, ifExists);
        TransactionsDao.dropTable(db, ifExists);
        ProductsDao.dropTable(db, ifExists);
        InventoryDao.dropTable(db, ifExists);
        ProductPacksDao.dropTable(db, ifExists);
        CustomersDao.dropTable(db, ifExists);
        CustomerDetailsDao.dropTable(db, ifExists);
        CustomerMonthlySummaryDao.dropTable(db, ifExists);
        DistributorsDao.dropTable(db, ifExists);
        DistributorDetailsDao.dropTable(db, ifExists);
        DistributorPaymentsDao.dropTable(db, ifExists);
    }
    
    public static abstract class OpenHelper extends SQLiteOpenHelper {

        public OpenHelper(Context context, String name, CursorFactory factory) {
            super(context, name, factory, SCHEMA_VERSION);
        }

        @Override
        public void onCreate(SQLiteDatabase db) {
            Log.i("greenDAO", "Creating tables for schema version " + SCHEMA_VERSION);
            createAllTables(db, false);
        }
    }
    
    /** WARNING: Drops all table on Upgrade! Use only during development. */
    public static class DevOpenHelper extends OpenHelper {
        public DevOpenHelper(Context context, String name, CursorFactory factory) {
            super(context, name, factory);
        }

        @Override
        public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
            Log.i("greenDAO", "Upgrading schema from version " + oldVersion + " to " + newVersion + " by dropping all tables");
            dropAllTables(db, true);
            onCreate(db);
        }
    }

    public DaoMaster(SQLiteDatabase db) {
        super(db, SCHEMA_VERSION);
        registerDaoClass(PurchaseOrdersDao.class);
        registerDaoClass(PurchaseOrderDetailsDao.class);
        registerDaoClass(InvoicesDao.class);
        registerDaoClass(ItemsDao.class);
        registerDaoClass(TransactionsDao.class);
        registerDaoClass(ProductsDao.class);
        registerDaoClass(InventoryDao.class);
        registerDaoClass(ProductPacksDao.class);
        registerDaoClass(CustomersDao.class);
        registerDaoClass(CustomerDetailsDao.class);
        registerDaoClass(CustomerMonthlySummaryDao.class);
        registerDaoClass(DistributorsDao.class);
        registerDaoClass(DistributorDetailsDao.class);
        registerDaoClass(DistributorPaymentsDao.class);
    }
    
    public DaoSession newSession() {
        return new DaoSession(db, IdentityScopeType.Session, daoConfigMap);
    }
    
    public DaoSession newSession(IdentityScopeType type) {
        return new DaoSession(db, type, daoConfigMap);
    }
    
}
