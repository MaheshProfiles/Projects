package com.snapbizz.snaptoolkit.db.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.snapbizz.snaptoolkit.db.dao.PurchaseOrders;
import com.snapbizz.snaptoolkit.db.dao.PurchaseOrderDetails;
import com.snapbizz.snaptoolkit.db.dao.Invoices;
import com.snapbizz.snaptoolkit.db.dao.Items;
import com.snapbizz.snaptoolkit.db.dao.Transactions;
import com.snapbizz.snaptoolkit.db.dao.Products;
import com.snapbizz.snaptoolkit.db.dao.Inventory;
import com.snapbizz.snaptoolkit.db.dao.ProductPacks;
import com.snapbizz.snaptoolkit.db.dao.Customers;
import com.snapbizz.snaptoolkit.db.dao.CustomerDetails;
import com.snapbizz.snaptoolkit.db.dao.CustomerMonthlySummary;
import com.snapbizz.snaptoolkit.db.dao.Distributors;
import com.snapbizz.snaptoolkit.db.dao.DistributorDetails;
import com.snapbizz.snaptoolkit.db.dao.DistributorPayments;

import com.snapbizz.snaptoolkit.db.dao.PurchaseOrdersDao;
import com.snapbizz.snaptoolkit.db.dao.PurchaseOrderDetailsDao;
import com.snapbizz.snaptoolkit.db.dao.InvoicesDao;
import com.snapbizz.snaptoolkit.db.dao.ItemsDao;
import com.snapbizz.snaptoolkit.db.dao.TransactionsDao;
import com.snapbizz.snaptoolkit.db.dao.ProductsDao;
import com.snapbizz.snaptoolkit.db.dao.InventoryDao;
import com.snapbizz.snaptoolkit.db.dao.ProductPacksDao;
import com.snapbizz.snaptoolkit.db.dao.CustomersDao;
import com.snapbizz.snaptoolkit.db.dao.CustomerDetailsDao;
import com.snapbizz.snaptoolkit.db.dao.CustomerMonthlySummaryDao;
import com.snapbizz.snaptoolkit.db.dao.DistributorsDao;
import com.snapbizz.snaptoolkit.db.dao.DistributorDetailsDao;
import com.snapbizz.snaptoolkit.db.dao.DistributorPaymentsDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig purchaseOrdersDaoConfig;
    private final DaoConfig purchaseOrderDetailsDaoConfig;
    private final DaoConfig invoicesDaoConfig;
    private final DaoConfig itemsDaoConfig;
    private final DaoConfig transactionsDaoConfig;
    private final DaoConfig productsDaoConfig;
    private final DaoConfig inventoryDaoConfig;
    private final DaoConfig productPacksDaoConfig;
    private final DaoConfig customersDaoConfig;
    private final DaoConfig customerDetailsDaoConfig;
    private final DaoConfig customerMonthlySummaryDaoConfig;
    private final DaoConfig distributorsDaoConfig;
    private final DaoConfig distributorDetailsDaoConfig;
    private final DaoConfig distributorPaymentsDaoConfig;

    private final PurchaseOrdersDao purchaseOrdersDao;
    private final PurchaseOrderDetailsDao purchaseOrderDetailsDao;
    private final InvoicesDao invoicesDao;
    private final ItemsDao itemsDao;
    private final TransactionsDao transactionsDao;
    private final ProductsDao productsDao;
    private final InventoryDao inventoryDao;
    private final ProductPacksDao productPacksDao;
    private final CustomersDao customersDao;
    private final CustomerDetailsDao customerDetailsDao;
    private final CustomerMonthlySummaryDao customerMonthlySummaryDao;
    private final DistributorsDao distributorsDao;
    private final DistributorDetailsDao distributorDetailsDao;
    private final DistributorPaymentsDao distributorPaymentsDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        purchaseOrdersDaoConfig = daoConfigMap.get(PurchaseOrdersDao.class).clone();
        purchaseOrdersDaoConfig.initIdentityScope(type);

        purchaseOrderDetailsDaoConfig = daoConfigMap.get(PurchaseOrderDetailsDao.class).clone();
        purchaseOrderDetailsDaoConfig.initIdentityScope(type);

        invoicesDaoConfig = daoConfigMap.get(InvoicesDao.class).clone();
        invoicesDaoConfig.initIdentityScope(type);

        itemsDaoConfig = daoConfigMap.get(ItemsDao.class).clone();
        itemsDaoConfig.initIdentityScope(type);

        transactionsDaoConfig = daoConfigMap.get(TransactionsDao.class).clone();
        transactionsDaoConfig.initIdentityScope(type);

        productsDaoConfig = daoConfigMap.get(ProductsDao.class).clone();
        productsDaoConfig.initIdentityScope(type);

        inventoryDaoConfig = daoConfigMap.get(InventoryDao.class).clone();
        inventoryDaoConfig.initIdentityScope(type);

        productPacksDaoConfig = daoConfigMap.get(ProductPacksDao.class).clone();
        productPacksDaoConfig.initIdentityScope(type);

        customersDaoConfig = daoConfigMap.get(CustomersDao.class).clone();
        customersDaoConfig.initIdentityScope(type);

        customerDetailsDaoConfig = daoConfigMap.get(CustomerDetailsDao.class).clone();
        customerDetailsDaoConfig.initIdentityScope(type);

        customerMonthlySummaryDaoConfig = daoConfigMap.get(CustomerMonthlySummaryDao.class).clone();
        customerMonthlySummaryDaoConfig.initIdentityScope(type);

        distributorsDaoConfig = daoConfigMap.get(DistributorsDao.class).clone();
        distributorsDaoConfig.initIdentityScope(type);

        distributorDetailsDaoConfig = daoConfigMap.get(DistributorDetailsDao.class).clone();
        distributorDetailsDaoConfig.initIdentityScope(type);

        distributorPaymentsDaoConfig = daoConfigMap.get(DistributorPaymentsDao.class).clone();
        distributorPaymentsDaoConfig.initIdentityScope(type);

        purchaseOrdersDao = new PurchaseOrdersDao(purchaseOrdersDaoConfig, this);
        purchaseOrderDetailsDao = new PurchaseOrderDetailsDao(purchaseOrderDetailsDaoConfig, this);
        invoicesDao = new InvoicesDao(invoicesDaoConfig, this);
        itemsDao = new ItemsDao(itemsDaoConfig, this);
        transactionsDao = new TransactionsDao(transactionsDaoConfig, this);
        productsDao = new ProductsDao(productsDaoConfig, this);
        inventoryDao = new InventoryDao(inventoryDaoConfig, this);
        productPacksDao = new ProductPacksDao(productPacksDaoConfig, this);
        customersDao = new CustomersDao(customersDaoConfig, this);
        customerDetailsDao = new CustomerDetailsDao(customerDetailsDaoConfig, this);
        customerMonthlySummaryDao = new CustomerMonthlySummaryDao(customerMonthlySummaryDaoConfig, this);
        distributorsDao = new DistributorsDao(distributorsDaoConfig, this);
        distributorDetailsDao = new DistributorDetailsDao(distributorDetailsDaoConfig, this);
        distributorPaymentsDao = new DistributorPaymentsDao(distributorPaymentsDaoConfig, this);

        registerDao(PurchaseOrders.class, purchaseOrdersDao);
        registerDao(PurchaseOrderDetails.class, purchaseOrderDetailsDao);
        registerDao(Invoices.class, invoicesDao);
        registerDao(Items.class, itemsDao);
        registerDao(Transactions.class, transactionsDao);
        registerDao(Products.class, productsDao);
        registerDao(Inventory.class, inventoryDao);
        registerDao(ProductPacks.class, productPacksDao);
        registerDao(Customers.class, customersDao);
        registerDao(CustomerDetails.class, customerDetailsDao);
        registerDao(CustomerMonthlySummary.class, customerMonthlySummaryDao);
        registerDao(Distributors.class, distributorsDao);
        registerDao(DistributorDetails.class, distributorDetailsDao);
        registerDao(DistributorPayments.class, distributorPaymentsDao);
    }
    
    public void clear() {
        purchaseOrdersDaoConfig.getIdentityScope().clear();
        purchaseOrderDetailsDaoConfig.getIdentityScope().clear();
        invoicesDaoConfig.getIdentityScope().clear();
        itemsDaoConfig.getIdentityScope().clear();
        transactionsDaoConfig.getIdentityScope().clear();
        productsDaoConfig.getIdentityScope().clear();
        inventoryDaoConfig.getIdentityScope().clear();
        productPacksDaoConfig.getIdentityScope().clear();
        customersDaoConfig.getIdentityScope().clear();
        customerDetailsDaoConfig.getIdentityScope().clear();
        customerMonthlySummaryDaoConfig.getIdentityScope().clear();
        distributorsDaoConfig.getIdentityScope().clear();
        distributorDetailsDaoConfig.getIdentityScope().clear();
        distributorPaymentsDaoConfig.getIdentityScope().clear();
    }

    public PurchaseOrdersDao getPurchaseOrdersDao() {
        return purchaseOrdersDao;
    }

    public PurchaseOrderDetailsDao getPurchaseOrderDetailsDao() {
        return purchaseOrderDetailsDao;
    }

    public InvoicesDao getInvoicesDao() {
        return invoicesDao;
    }

    public ItemsDao getItemsDao() {
        return itemsDao;
    }

    public TransactionsDao getTransactionsDao() {
        return transactionsDao;
    }

    public ProductsDao getProductsDao() {
        return productsDao;
    }

    public InventoryDao getInventoryDao() {
        return inventoryDao;
    }

    public ProductPacksDao getProductPacksDao() {
        return productPacksDao;
    }

    public CustomersDao getCustomersDao() {
        return customersDao;
    }

    public CustomerDetailsDao getCustomerDetailsDao() {
        return customerDetailsDao;
    }

    public CustomerMonthlySummaryDao getCustomerMonthlySummaryDao() {
        return customerMonthlySummaryDao;
    }

    public DistributorsDao getDistributorsDao() {
        return distributorsDao;
    }

    public DistributorDetailsDao getDistributorDetailsDao() {
        return distributorDetailsDao;
    }

    public DistributorPaymentsDao getDistributorPaymentsDao() {
        return distributorPaymentsDao;
    }

}
